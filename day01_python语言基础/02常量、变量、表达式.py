# 一、基本数据类型
# Python中支持6种标准的数据类型:
# 数字,字符串，列表，元组，字典，集合
# 数字(Numbers)——整型(Integer)
# Python3中的整数可以任意大，而不用担心位数不够而导致溢出的情况
print(123456789012345678901234567890)
# 1.数字(Numbers)——浮点数(Float)
# 科学计数法：10的n次方 ---》En en
print(1.233E8, type(1.233E8), ";", 1.233e3, type(1.233e3))
# 2.数字(Numbers)——布尔值(Boolean)
# True( 真)—— 1 False(假)—— 0
print(True == 1)
# 3.数字(Numbers)——复数(Complex)
# a+bi 1+2i

# 4.字符串(String)
# 使用成对的单引号或者双引号括起来。
print("python", '3.7')
# 使用三重引号指定一个多行字符串。
print("""
这是一个文档字符串
使用的是三重双引号
""")
# 多行注释:可以直接使用多行字符串，作为程序的注释 """
"""
这是一个多行注释
其不同于单行注释
"""

# 5.标识符(Identifier):变量、函数、数组、文件、对象等的名字。
# 标识符是大小写敏感的。score ,Score
# 标识符的第1个字符必须是字母或下划线
# _xxx 类中的保护变量名
# __xxx  类中的私有变量名
# __xxx_ 系统定义的标识符  __init__()

# 二、常量(constant)
# 数字、字符串、布尔值、空值等 2，-10086，3.5， "Python" ，True、False，None
# Python中没有命名常量,不能给常量起一个名字

# 三、变量(variable)
# Python的变量不需要声明 其数据类型由所赋的值来决定
# 不同类型的数字型数据运算时，会自动的进行类型转换 bool<int<float<complex
# 自动的类型转换，仅存在于数字型数据之间
# 1.数据类型转换函数
# int(x,base) 转换为整型
print(int("111", 2))
print(int(-3.6)) #向0取整
print(int(3.6))
# float() 转换为浮点型
print(float("111"))
# bool() 转换为布尔型 0为True 非0为False
print(bool(111))
print(bool(0))
# str() 转换为字符串
print(str(111), type(str(111)))
# chr() 将整数转换为对应的ASCII字符
print(chr(65))
# ord() 将一个字符转换为对应的ASCII码
print(ord('A'))
# complex() 转换为复数型
print(complex(15))

# 2.使用help()函数查看函数的用法
help("keywords")
help(int)
help(complex)

# 三、运算符和表达式
# 运算符(Operator):完成不同类型的常量、变量之间的运算
# 表达式(Expression):由常量、变量和运算符组成
# 1.算术运算符 +、-、*、%
# 不同：
# / 除法运算：7/2的结果是3.5(精确除法) 结果是一个浮点型的精确数的值(即使是2个整数相除)
print(7/2)
# // 整除运算 7//2的结果是3(向下取整) 运算结果取比商小的最大整数
print(7//2)
print(-7//2)
# ** 幂运算：2**3的结果是8
print(2**3)

# 2.赋值运算符 =、+=、-=、*=、/=、%=
# 不同：**=与//=
x = 2
x **= 2
x //= 4
print(x)
# 连续赋值
a = b = c = 1
print(a, b, c)
# 多元赋值
(x, y, z) = (1, 2, 'python')
print(x, y, z)
# 例:交换x,y的值
(x, y) = (1, 2)
(x, y) = (y, x)
print(x, y)

# 3.逻辑运算符
# and 逻辑与
# or 逻辑或
# not 逻辑非
# True: 1 非0数值、非空集合 False:0 值为0的数字、空集

# 4.比较运算符
# == 等于运算符
# !=, <> 不等于运算符
# < 小于运算符
# > 大于运算符
# <= 小于等于运算符
# >= 大于等于运算符

# 5.位运算符:直接对整数在内存中的二进制位进行操作
# & 按位与 0&0=0;0&1=0;1&0=0;1&1=1
# | 按位或 0 | 0=0;0 | 1=1;1 | 0=1;1 | 1=1
# ^ 按位异或 0^0=0;0^1=1;1^0=1;1^1=0
# ~ 按位非 ~1=0; ~0=1

# 6.字符串运算符
# + 字符串连接
py = "python"
v1 = '2.0'
v2 = '3.0'
print(py+v1, py+v2)
# * 重复输出字符串
print("重要的事情说三遍！"*3)
# 绘制分割线
print("-"*40)
print(" "*10+"这是一条羞羞的分割线")
print("-"*40)

# 7.成员运算符
# in 如果序列中包含给定的元素，则 返回True，否则返回False。
str_a = "Hello"
print('H' in str_a)
# not in 如果序列中不包含给定的元素， 则返回True，否则返回False。
print('e' not in str_a)